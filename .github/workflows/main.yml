# name: Streamlit App CI

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3

#     - name: Set up Python
#       uses: actions/setup-python@v4
#       with:
#         python-version: 3.9

#     - name: Install dependencies
#       run: |
#         python -m venv env
#         source env/bin/activate
#         pip install --upgrade pip
#         pip install -r requirements.txt

#     - name: Install PaddleOCR dependencies
#       run: |
#         sudo apt-get update
#         sudo apt-get install -y libgl1-mesa-glx libglib2.0-0

#     - name: Lint with flake8
#       run: |
#         pip install flake8
#         flake8 .

#     - name: Test application
#       run: |
#         source env/bin/activate
#         pytest

#     - name: Deploy to Streamlit
#       if: github.ref == 'refs/heads/main'
#       run: |
#         # Assuming you deploy via Streamlit sharing or another service
#         echo "Deploying to Streamlit..."
#         # Replace with your deployment steps if needed






name: Deploy Application

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        run: |
          docker build -t my-app:${{ github.sha }} .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to Docker Hub
        run: |
          docker tag my-app:${{ github.sha }} my-dockerhub-username/my-app:${{ github.sha }}
          docker push my-dockerhub-username/my-app:${{ github.sha }}

      - name: Deploy Docker image to server
        run: |
          echo "Deploying Docker image to server"
          ssh user@server "docker pull my-dockerhub-username/my-app:${{ github.sha }} && docker run -d my-dockerhub-username/my-app:${{ github.sha }}"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
