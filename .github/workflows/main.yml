# name: Streamlit App CI

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3

#     - name: Set up Python
#       uses: actions/setup-python@v4
#       with:
#         python-version: 3.9

#     - name: Install dependencies
#       run: |
#         python -m venv env
#         source env/bin/activate
#         pip install --upgrade pip
#         pip install -r requirements.txt

#     - name: Install PaddleOCR dependencies
#       run: |
#         sudo apt-get update
#         sudo apt-get install -y libgl1-mesa-glx libglib2.0-0

#     - name: Lint with flake8
#       run: |
#         pip install flake8
#         flake8 .

#     - name: Test application
#       run: |
#         source env/bin/activate
#         pytest

#     - name: Deploy to Streamlit
#       if: github.ref == 'refs/heads/main'
#       run: |
#         # Assuming you deploy via Streamlit sharing or another service
#         echo "Deploying to Streamlit..."
#         # Replace with your deployment steps if needed






name: Deploy Application

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Deploy to Server
        run: |
          echo "Deploying to server"
          scp -r . user@server:/path/to/deploy
          ssh user@server "cd /path/to/deploy && ./deploy_script.sh"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
